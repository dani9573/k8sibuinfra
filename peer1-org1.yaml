# YAML for launching peer1 Org1
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: org1peer1
  labels:
    run: org1peer1
spec:
  serviceName: org1peer1
  replicas: 1
  selector:
    matchLabels:
      run: org1peer1
  template:
    metadata:
      labels:
        run: org1peer1
    spec:
      containers:
      - name: org1peer1
        # Image used
        image: hyperledger/fabric-peer
        env:
          - name: FABRIC_CFG_PATH
            value: /etc/hyperledger/fabric
          - name: FABRIC_LOGGING_SPEC
            value: DEBUG          
          - name: CORE_PEER_ID
            value: peer1.org1.prototipo.com
          - name: CORE_PEER_ADDRESS
            value: peer1-org1-prototipo:8051
          - name: CORE_PEER_LISTENADDRESS
            value: 0.0.0.0:8051
          - name: CORE_PEER_CHAINCODEADDRESS
            value: peer1-org1-prototipo:8052
          - name: CORE_PEER_CHAINCODELISTENADDRESS
            value: 0.0.0.0:8052
          - name: CORE_PEER_LOCALMSPID
            value: Org1MSP
          - name: CORE_PEER_TLS_ENABLED
            value: "true"
          - name: CORE_PEER_PROFILE_ENABLED
            value: "true"
          - name: CORE_PEER_TLS_CERT_FILE
            value: /etc/hyperledger/fabric/tls/server.crt
          - name: CORE_PEER_TLS_KEY_FILE
            value: /etc/hyperledger/fabric/tls/server.key
          - name: CORE_PEER_TLS_ROOTCERT_FILE
            value: /etc/hyperledger/fabric/tls/ca.crt
          - name: CORE_PEER_MSPCONFIGPATH
            value: /etc/hyperledger/fabric/users/Admin@org1.prototipo.com/msp
          - name: CORE_LEDGER_STATE_STATEDATABASE
            value: "CouchDB"
          - name: CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS
            value: couchdb-peer1-org1:5984
          - name: CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME
            value: "blocksaas"
          - name: CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
            value: "blocksaas1988"
            
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        
        volumeMounts:
        - name: dockersock
          mountPath: /var/run/docker.sock
        - name: my-pvc-nfs
          mountPath: /etc/hyperledger/fabric/msp
          subPath: crypto-config/peerOrganizations/org1.prototipo.com/peers/peer1.org1.prototipo.com/msp
        - name: my-pvc-nfs
          mountPath: /etc/hyperledger/fabric/tls
          subPath: crypto-config/peerOrganizations/org1.prototipo.com/peers/peer1.org1.prototipo.com/tls
        - name: my-pvc-nfs
          mountPath: /etc/hyperledger/fabric/users
          subPath: crypto-config/peerOrganizations/org1.prototipo.com/users
        #- name: my-pvc-nfs
        #  mountPath: /var/hyperledger/production
        #  subPath: crypto-config/peerOrganizations/org1.prototipo.com/peers/peer1.org1.prototipo.com
        - name: my-pvc-nfs
          mountPath: /etc/hyperledger/fabric/chaincode
          subPath: chaincode
        - name: my-pvc-nfs
          mountPath: /etc/hyperledger/fabric/channel-artifacts
          subPath: channel-artifacts     
        - name: my-pvc-nfs
          mountPath: /etc/hyperledger/fabric/crypto
          subPath: crypto-config 

      volumes:
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: my-pvc-nfs
        persistentVolumeClaim:
          claimName: nfs
          
---
# Expose the port 8051 as ClusterIP
apiVersion: v1
kind: Service
metadata:
  name: peer1-org1-prototipo

spec:
  selector:
    run: org1peer1

  ports:
    - name: org1peer1
      port: 8051
    - name: org1peer1-cc
      port: 8052

  type: ClusterIP

---
# Expose the port 8051 as node port -  NEEDED if you
# are interested in connecting to the Pods from the Host
# machine - keep in mind you would need the IP for the node
# port service
apiVersion: v1
kind: Service
metadata:
  name: peer1-org1-prototipo-nodeport

spec:
  selector:
    run: org1peer1

  ports:
    - name: org1peer1-nodeport
      port: 30851
      nodePort: 30851
    - name: org1peer1-cc-nodeport
      port: 30852
      nodePort: 30852

  type: NodePort
